/* prettier-ignore-start */

/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file is auto-generated by TanStack Router

import { createFileRoute } from '@tanstack/react-router'

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as AuthenticatedImport } from './routes/_authenticated'
import { Route as IndexImport } from './routes/index'

// Create Virtual Routes

const JobsLazyImport = createFileRoute('/jobs')()
const AuthenticatedProfileLazyImport = createFileRoute(
  '/_authenticated/profile',
)()
const AuthenticatedExpensesLazyImport = createFileRoute(
  '/_authenticated/expenses',
)()
const AuthenticatedCreateExpenseLazyImport = createFileRoute(
  '/_authenticated/create-expense',
)()
const AuthenticatedApplyLazyImport = createFileRoute('/_authenticated/apply')()
const AuthenticatedJobsJobIdLazyImport = createFileRoute(
  '/_authenticated/jobs/$jobId',
)()

// Create/Update Routes

const JobsLazyRoute = JobsLazyImport.update({
  path: '/jobs',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/jobs.lazy').then((d) => d.Route))

const AuthenticatedRoute = AuthenticatedImport.update({
  id: '/_authenticated',
  getParentRoute: () => rootRoute,
} as any)

const IndexRoute = IndexImport.update({
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const AuthenticatedProfileLazyRoute = AuthenticatedProfileLazyImport.update({
  path: '/profile',
  getParentRoute: () => AuthenticatedRoute,
} as any).lazy(() =>
  import('./routes/_authenticated/profile.lazy').then((d) => d.Route),
)

const AuthenticatedExpensesLazyRoute = AuthenticatedExpensesLazyImport.update({
  path: '/expenses',
  getParentRoute: () => AuthenticatedRoute,
} as any).lazy(() =>
  import('./routes/_authenticated/expenses.lazy').then((d) => d.Route),
)

const AuthenticatedCreateExpenseLazyRoute =
  AuthenticatedCreateExpenseLazyImport.update({
    path: '/create-expense',
    getParentRoute: () => AuthenticatedRoute,
  } as any).lazy(() =>
    import('./routes/_authenticated/create-expense.lazy').then((d) => d.Route),
  )

const AuthenticatedApplyLazyRoute = AuthenticatedApplyLazyImport.update({
  path: '/apply',
  getParentRoute: () => AuthenticatedRoute,
} as any).lazy(() =>
  import('./routes/_authenticated/apply.lazy').then((d) => d.Route),
)

const AuthenticatedJobsJobIdLazyRoute = AuthenticatedJobsJobIdLazyImport.update(
  {
    path: '/jobs/$jobId',
    getParentRoute: () => AuthenticatedRoute,
  } as any,
).lazy(() =>
  import('./routes/_authenticated/jobs.$jobId.lazy').then((d) => d.Route),
)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/_authenticated': {
      id: '/_authenticated'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof AuthenticatedImport
      parentRoute: typeof rootRoute
    }
    '/jobs': {
      id: '/jobs'
      path: '/jobs'
      fullPath: '/jobs'
      preLoaderRoute: typeof JobsLazyImport
      parentRoute: typeof rootRoute
    }
    '/_authenticated/apply': {
      id: '/_authenticated/apply'
      path: '/apply'
      fullPath: '/apply'
      preLoaderRoute: typeof AuthenticatedApplyLazyImport
      parentRoute: typeof AuthenticatedImport
    }
    '/_authenticated/create-expense': {
      id: '/_authenticated/create-expense'
      path: '/create-expense'
      fullPath: '/create-expense'
      preLoaderRoute: typeof AuthenticatedCreateExpenseLazyImport
      parentRoute: typeof AuthenticatedImport
    }
    '/_authenticated/expenses': {
      id: '/_authenticated/expenses'
      path: '/expenses'
      fullPath: '/expenses'
      preLoaderRoute: typeof AuthenticatedExpensesLazyImport
      parentRoute: typeof AuthenticatedImport
    }
    '/_authenticated/profile': {
      id: '/_authenticated/profile'
      path: '/profile'
      fullPath: '/profile'
      preLoaderRoute: typeof AuthenticatedProfileLazyImport
      parentRoute: typeof AuthenticatedImport
    }
    '/_authenticated/jobs/$jobId': {
      id: '/_authenticated/jobs/$jobId'
      path: '/jobs/$jobId'
      fullPath: '/jobs/$jobId'
      preLoaderRoute: typeof AuthenticatedJobsJobIdLazyImport
      parentRoute: typeof AuthenticatedImport
    }
  }
}

// Create and export the route tree

export const routeTree = rootRoute.addChildren({
  IndexRoute,
  AuthenticatedRoute: AuthenticatedRoute.addChildren({
    AuthenticatedApplyLazyRoute,
    AuthenticatedCreateExpenseLazyRoute,
    AuthenticatedExpensesLazyRoute,
    AuthenticatedProfileLazyRoute,
    AuthenticatedJobsJobIdLazyRoute,
  }),
  JobsLazyRoute,
})

/* prettier-ignore-end */

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/_authenticated",
        "/jobs"
      ]
    },
    "/": {
      "filePath": "index.tsx"
    },
    "/_authenticated": {
      "filePath": "_authenticated.tsx",
      "children": [
        "/_authenticated/apply",
        "/_authenticated/create-expense",
        "/_authenticated/expenses",
        "/_authenticated/profile",
        "/_authenticated/jobs/$jobId"
      ]
    },
    "/jobs": {
      "filePath": "jobs.lazy.tsx"
    },
    "/_authenticated/apply": {
      "filePath": "_authenticated/apply.lazy.tsx",
      "parent": "/_authenticated"
    },
    "/_authenticated/create-expense": {
      "filePath": "_authenticated/create-expense.lazy.tsx",
      "parent": "/_authenticated"
    },
    "/_authenticated/expenses": {
      "filePath": "_authenticated/expenses.lazy.tsx",
      "parent": "/_authenticated"
    },
    "/_authenticated/profile": {
      "filePath": "_authenticated/profile.lazy.tsx",
      "parent": "/_authenticated"
    },
    "/_authenticated/jobs/$jobId": {
      "filePath": "_authenticated/jobs.$jobId.lazy.tsx",
      "parent": "/_authenticated"
    }
  }
}
ROUTE_MANIFEST_END */
